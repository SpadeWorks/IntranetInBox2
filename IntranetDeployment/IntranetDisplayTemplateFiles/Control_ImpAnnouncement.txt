<html xmlns:mso="urn:schemas-microsoft-com:office:office" xmlns:msdt="uuid:C2F41010-65B3-11d1-A29F-00AA00C14882"> 
<head>
<title>Important Announcements</title>

<!--[if gte mso 9]><xml>
<mso:CustomDocumentProperties>
<mso:TemplateHidden msdt:dt="string">0</mso:TemplateHidden>
<mso:MasterPageDescription msdt:dt="string">This is the default Control Display Template that will list the items. It does not allow the user to page through items.</mso:MasterPageDescription>
<mso:ContentTypeId msdt:dt="string">0x0101002039C03B61C64EC4A04F5361F385106601</mso:ContentTypeId>
<mso:TargetControlType msdt:dt="string">;#Content Web Parts;#</mso:TargetControlType>
<mso:HtmlDesignAssociated msdt:dt="string">1</mso:HtmlDesignAssociated>
<mso:HtmlDesignConversionSucceeded msdt:dt="string">True</mso:HtmlDesignConversionSucceeded>
<mso:HtmlDesignStatusAndPreview msdt:dt="string">http://icsp2016dev102:8081/_catalogs/masterpage/Display%20Templates/Content%20Web%20Parts/Control_ImpAnnouncement.html, Conversion successful.</mso:HtmlDesignStatusAndPreview>
</mso:CustomDocumentProperties>
</xml><![endif]-->
</head>

<body>

    <!--
            Warning: Do not try to add HTML to this section. Only the contents of the first <div>
            inside the <body> tag will be used while executing Display Template code. Any HTML that
            you add to this section will NOT become part of your Display Template.
    -->
    <script>
        $includeLanguageScript(this.url, "~sitecollection/_catalogs/masterpage/Display Templates/Language Files/{Locale}/CustomStrings.js");
    </script>

    <!--
        Use the div below to author your Display Template. Here are some things to keep in mind:
        * Surround any JavaScript logic as shown below using a "pound underscore" (#_ ... _#) token
        inside a comment.

        * Use the values assigned to your variables using an "underscore pound equals"
        (_#= ... =#_) token.
    -->

    <div id="Control_List">

<!--#_ 
window.onload = function(){
$(".announce_close").click(function(){
    $(".newsbulletin-wrap").hide();
})
	$('.newsbulletin-wrap ul li').addClass('slide');

 
var controls = document.querySelectorAll('.controls');
        	 for(var i=0; i<controls.length; i++){
             controls[i].style.display = 'inline-block';
             }
              var slides = document.querySelectorAll('#slides .slide');
              var currentSlide = 1;
			  nextSlide();
              var slideInterval = setInterval(nextSlide,3000);
              function nextSlide(){
                     goToSlide(currentSlide+1);
                        addannouncements();
              }
              function previousSlide(){
                     goToSlide(currentSlide-1);
              }
              function goToSlide(n){
                     slides[currentSlide].className = 'slide';
              		 currentSlide = (n+slides.length)%slides.length;
                     slides[currentSlide].className = 'slide showing';
              }
              var playing = true;           
              function playSlideshow(){
                      //pauseButton.innerHTML = '<span class="fa fa-pause"></span>'; // pause character
                      playing = true;
                      slideInterval = setInterval(nextSlide,3000);
              }              
              var next = document.getElementById('next');
              var previous = document.getElementById('previous');
              next.onclick = function(){
                   //pauseSlideshow();
                   nextSlide();
              };
              previous.onclick = function(){
              //pauseSlideshow();
              previousSlide();      							
            };
            
   
 }
 
if (!$isNull(ctx.ClientControl) &&
    !$isNull(ctx.ClientControl.shouldRenderControl) &&
    !ctx.ClientControl.shouldRenderControl())
{
    return "";
}
ctx.ListDataJSONGroupsKey = "ResultTables";
var $noResults = Srch.ContentBySearch.getControlTemplateEncodedNoResultsMessage(ctx.ClientControl);

var noResultsClassName = "ms-srch-result-noResults";

var ListRenderRenderWrapper = function(itemRenderResult, inCtx, tpl)
{
    var iStr = [];
    iStr.push('<li>');
    iStr.push(itemRenderResult);
    iStr.push('</li>');
    return iStr.join('');
}
ctx['ItemRenderWrapper'] = ListRenderRenderWrapper;
//var totalRows = ctx.DataProvider.get_totalRows();

_#-->
<div class="newsbulletin-wrap">
                                <div class="nbb-newsbulletin">

  
  <div class="nbb-newsbulletin-Title pull-left">
                                        <div class="nbb-newsbulletin-TitleTxt pull-left">NBB Bulletin
                                        </div>
                                        <div class="nbb-newsbulletin-arrow pull-right">
                                        </div>
                                    </div>
        
                                    
    <ul id="slides">
                _#= ctx.RenderGroups(ctx) =#_
        </ul> 
        <div class="newsbulletin-buttons">
            <a class="controls" id="previous"><span class="fa fa-angle-left"></span></a>
            
            <a class="controls" id="next"><span class="fa fa-angle-right"></span></a>
       </div>          
       
<!--#_

//   setTimeout(addannouncements, 0);	
            function addannouncements(){
            $(".newsbulletin-wrap").css("display","block")
            }
            
if (ctx.ClientControl.get_shouldShowNoResultMessage())
{
_#-->
        <div class="_#= noResultsClassName =#_">_#= $noResults =#_</div>
<!--#_
}

_#-->

    </div>
    <!--#_



_#-->
</div>
</div>
</body>
</html>
